<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en" xml:id="majisti.controller.dispatcher"
    version="5.0">

    <title>The Dispatcher</title>

    <para> The dispatcher has been rewritten to comply to the modularity Majisti is trying to
        accomplish. The only difference is that it is possible to have multiple controller
        directories under the same module. When it is dispatched, it will use its list of controller
        directories and fallback to the next one each time the directory does not exist. That way,
        it would be possible to extend entire modules in another library by adding or redefining
        controllers, models, views in the application's or user's library without having to import
        all the files of that actual module. </para>
    
    <example>
        <title>Multiple controller directories</title>
        
        <para>Suppose you have dropped in a Blog module into MajistiC:</para>
    
        <programlisting><![CDATA[
MajistiC
    Modules
        Blog
            controllers
                CommentsController.php
                PagesController.php
                ... //bunch of other controllers
            models
            views
        AnotherModule
            ...
]]></programlisting>
    
        <para>And your application tree:</para>
    
        <programlisting><![CDATA[
application
    modules
        default
            ...
        Blog
            controllers
                CommentsController.php
                NewControllerNotContainedInShippedModule.php
                ...
        ... //other modules
]]></programlisting>
    
        <para>You added the module into your configuration file:</para>
    
        <programlisting><![CDATA[
resources.frontController.controllerDirectory[blog] = MAJISTIX_MODULES_PATH "/blog/controllers"        
resources.frontController.controllerDirectory[blog] = APPLICATION_PATH "/blog/controllers"        
]]></programlisting>
    
        <para>Extending controllers would simply require that you extend the one
            you wish to redefine behaviour:</para>

        <programlisting><![CDATA[
namespace MyApplication\Modules\Blog;

class CommentsController extends \Majisti\Modules\Blog\CommentsController  
{
    public function commentAction()
    {
        //redefining behaviour...
    }
}
]]></programlisting>
        
    </example>
    
    <note><para>Notice here that Zend's Standard Dispatcher would only add the last
        controller directory which in this example would be the
        application's blog controller directory but with Majisti's
        Standard Dispatcher it will append them.
    </para></note>
</section>
