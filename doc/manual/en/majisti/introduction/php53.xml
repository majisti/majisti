<?xml version="1.0" encoding="UTF-8"?>
<section
    xmlns="http://docbook.org/ns/docbook" 
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" 
    xml:lang="en" xml:id="majisti.introduction.php53" 
    version="5.0">
    
    <title>PHP5.3 Support</title>
    
    <section xml:id="majisti.introduction.php53.autoloader">
        
        <title>Autoloader</title>
        
        <para>Along with the Zend's autoloader, Majisti adds up to the
            autoloading stack with its implementation of an autoloader PHP5.3
            namespaced class. A class located under /Path/To/Class would be
            instanciable without using <methodname>require_once</methodname>
            with the namespace syntax, which in this case would be
            \Path\To\Class provided it is retrievable from the include_path.
            This is a fast implementation before ZF2 gets released.</para>
    </section>
    
    <section xml:id="majisti.introduction.php53.namespaces">
        
        <title>Namespaces</title>
        
        <para>Majisti is entirely written with PHP5.3. Meaning that it makes use
            of the new features such as lamba functions, late static binding and
            namespaces. Those new features provide maximum flexibility and
            Majisti strives to make the best use of them. However, since Majisti
            uses Zend as its backbone framework, which is using a namespacing
            mechanism of its own, it cannot use PHP5.3 namespace everywhere.
            Trying to extend all the components to assure that every single one
            is PHP5.3 namespace compatible is not within Majisti's scope.
            Therefore, Majisti will rely and wait on Zend 2.0 to consider
            whether full PHP5.3 namespace would be needed. Currently, Module
            bootstrap and controllers are the only class that are not namespaced
            within your application. Models, Handlers, View helpers, Action
            Helpers, Resources and Controller plugins are all namespaced since
            0.4.0.</para>
    </section>
</section>
